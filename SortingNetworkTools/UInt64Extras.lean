/-- Returns the number of `1`s in the binary representation of `u`. -/
def UInt64.countSetBits (u : UInt64) : UInt64 := Id.run do
  let mut u := u
  for h : i in [0:6] do
    u := ((u &&& masksA[i]) >>> 2^i) + (u &&& masksB[i])
  u
where
  masksA : Vector UInt64 6 := #[
    0b1010101010101010101010101010101010101010101010101010101010101010,
    0b1100110011001100110011001100110011001100110011001100110011001100,
    0b1111000011110000111100001111000011110000111100001111000011110000,
    0b1111111100000000111111110000000011111111000000001111111100000000,
    0b1111111111111111000000000000000011111111111111110000000000000000,
    0b1111111111111111111111111111111100000000000000000000000000000000,
  ].toVector
  masksB : Vector UInt64 6 := #[
    0b0101010101010101010101010101010101010101010101010101010101010101,
    0b0011001100110011001100110011001100110011001100110011001100110011,
    0b0000111100001111000011110000111100001111000011110000111100001111,
    0b0000000011111111000000001111111100000000111111110000000011111111,
    0b0000000000000000111111111111111100000000000000001111111111111111,
    0b0000000000000000000000000000000011111111111111111111111111111111,
  ].toVector
